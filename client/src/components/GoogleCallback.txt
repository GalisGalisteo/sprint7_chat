import React, { useEffect } from 'react';
import { useNavigate } from 'react-router-dom';

const GoogleCallback = () => {
  const navigate = useNavigate();

  useEffect(() => {
    // Retrieve the query parameters from the URL
    const params = new URLSearchParams(window.location.search);
    const code = params.get('code');
    const state = params.get('state');

    // Send a request to your server to exchange the code for an access token
    // You can use a fetch or Axios for this purpose
    fetch(`/api/auth/google/callback?code=${code}&state=${state}`)
      .then((response) => {
        if (response.ok) {
          return response.json();
        } else {
          throw new Error('Authentication failed');
        }
      })
      .then((data) => {
        // Handle the server's response, which may include user information
        // Update the user's authentication status in your application
        // For example, you can store user data in context or local storage
        localStorage.setItem('token', data.token);
        localStorage.setItem('name', data.name);
        // Redirect to the dashboard or any other protected route
        navigate('/');
      })
      .catch((error) => {
        console.error('Authentication error:', error);
        // Handle authentication error, e.g., show an error message
        navigate('/login'); // Redirect to the login page
      });
  }, [navigate]);

  return <div>Processing...</div>;
};

export default GoogleCallback;
